from bot import bot, config
from bot.helper.db import db
from bot.helper.commands import command

from bot.helper.utils import (
    only_admin,
    resolve_tg_link,
    to_small_caps,
    uint
)

@only_admin
async def promote(event):
    args = event.message.text.split()

    if len(args) < 3:
        await event.respond(f"**‚ö†Ô∏è  è·¥è·¥ú  ú·¥Ä·¥†·¥á ·¥õ·¥è ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ús·¥á Ä …™·¥Ö & ·¥ò ü·¥Ä…¥ (1,2,3)!**")
        return

    user_id = args[1]
    plan = args[2]

    plan_data = config.get_plans_as_dict()

    if plan not in plan_data:
        supported_plans = ", ".join(f"`{i}`" for i in plan_data.keys())
        await event.respond(f"**‚ö†Ô∏è …™…¥·¥† ü…™·¥Ö ·¥ò ü·¥Ä…¥ ·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ·¥á·¥Ö! s·¥ú·¥ò·¥ò·¥è Ä·¥õ·¥á·¥Ö ·¥ò ü·¥Ä…¥s ·¥Ä Ä·¥á:** {supported_plans}")
        return

    validity = plan_data[plan]['validity']
    total = uint(plan_data[plan]['mass_content_downloader'])

    try:
        user = await bot.get_entity(uint(user_id))
        user_id = user.id
    except:
        await event.respond(f"**‚ö†Ô∏è …™…¥·¥†·¥Ä ü…™·¥Ö ·¥ús·¥á Ä:** …¥·¥á·¥†·¥á Ä s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö ·¥õ ú·¥á  ô·¥è·¥õ ·¥ò Ä·¥á·¥†…™·¥è·¥ús ü è!")
        return

    await db.add_premium_user(
        user_id,
        membership=plan,
        total=total,
        validity=validity
    )

    await event.reply(
        f"**·¥ús·¥á Ä** `{user_id}` s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è **·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á·¥Ö ·¥õ·¥è** `{plan}`! ‚úÖ"
    )

    try:
        text = (
            f"**üéâ ·¥Ñ·¥è…¥…¢ Ä·¥Ä·¥õ·¥ú ü·¥Ä·¥õ…™·¥è…¥s!**"
            f"\n\n** è·¥è·¥ú Ä ·¥ò Ä·¥á·¥ç…™·¥ú·¥ç ·¥ò ü·¥Ä…¥  ú·¥Äs  ô·¥á·¥á…¥ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥õ·¥á·¥Ö! ‚ö°Ô∏è**"
            f"\n\n>‚úÖ **·¥ò ü·¥Ä…¥ ·¥Ö·¥á·¥õ·¥Ä…™ üs: {to_small_caps(plan)} ·¥ò Ä·¥á·¥ç…™·¥ú·¥ç**"
            f"\nüìÖ **·¥Ö·¥ú Ä·¥Ä·¥õ…™·¥è…¥: {to_small_caps(plan_data[plan]['validity_str'])}**"
            f"\n‚è≥ **·¥á…¥·¥Ö…™…¥…¢ ·¥Ö·¥Ä·¥õ·¥á: {to_small_caps(validity.strftime('%d-%m-%Y %I:%M:%S %p'))}**>"
            f"\n\n**s·¥õ·¥Ä Ä·¥õ ·¥á…¥·¥ä·¥è è…™…¥…¢ ·¥Ä ü ü ·¥õ ú·¥á ·¥áx·¥Ñ ü·¥ús…™·¥†·¥á “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás ·¥õ·¥è·¥Ö·¥Ä è! üöÄ**"
            f"\n\n**·¥õ ú·¥Ä…¥·¥ã  è·¥è·¥ú “ì·¥è Ä ·¥Ñ ú·¥è·¥ès…™…¥…¢ ·¥ús!**"
        )

        if config.default.support:
            support_channel = resolve_tg_link(config.default.support)
            text += f" **( @{support_channel} ) !**"

        await bot.send_message(
            user_id,
            text
        )
    except:
        pass

@only_admin
async def demote(event):
    args = event.message.text.split()

    if len(args) < 2:
        await event.respond(f"**‚ö†Ô∏è  è·¥è·¥ú  ú·¥Ä·¥†·¥á ·¥õ·¥è ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ús·¥á Ä …™·¥Ö ·¥õ·¥è ·¥Ö·¥á·¥ç·¥è·¥õ·¥á …™…¥·¥õ·¥è “ì Ä·¥á·¥á ·¥ús·¥á Ä!**")
        return

    user_id = args[1]

    try:
        user = await bot.get_entity(uint(user_id))
        user_id = user.id
    except:
        await event.respond(f"**‚ö†Ô∏è …™…¥·¥†·¥Ä ü…™·¥Ö ·¥ús·¥á Ä:** …¥·¥á·¥†·¥á Ä s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö ·¥õ ú·¥á  ô·¥è·¥õ ·¥ò Ä·¥á·¥†…™·¥è·¥ús ü è!")
        return

    await db.add_premium_user(user_id)
    await event.reply(
        f"**·¥ús·¥á Ä** `{user_id}` s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è **·¥Ö·¥á·¥ç·¥è·¥õ·¥á·¥Ö**! üö´"
    )

    try:
        udb = await db.get_user(user_id)
        exp = to_small_caps(udb.validity.strftime('%d-%m-%Y %I:%M:%S %p')) if getattr(udb, 'validity', None) else 'üö´'
        text = (
            f"**‚ö†Ô∏è …™·¥ç·¥ò·¥è Ä·¥õ·¥Ä…¥·¥õ …¥·¥è·¥õ…™“ì…™·¥Ñ·¥Ä·¥õ…™·¥è…¥**"
            f"\n\n** è·¥è·¥ú Ä ·¥ò Ä·¥á·¥ç…™·¥ú·¥ç ·¥ò ü·¥Ä…¥  ú·¥Äs ·¥áx·¥ò…™ Ä·¥á·¥Ö. üòî**"
            f"\n\n>‚úÖ **·¥ò ü·¥Ä…¥ ·¥Ö·¥á·¥õ·¥Ä…™ üs: {to_small_caps(udb.membership)} ·¥ò Ä·¥á·¥ç…™·¥ú·¥ç**"
            f"\nüìÖ **·¥áx·¥ò…™ Ä·¥Ä·¥õ…™·¥è…¥ ·¥Ö·¥Ä·¥õ·¥á: {exp}**>"
            f"\n\n** Ä·¥á…¥·¥á·¥° …¥·¥è·¥° ·¥õ·¥è ·¥Ñ·¥è…¥·¥õ…™…¥·¥ú·¥á ·¥á…¥·¥ä·¥è è…™…¥…¢ ·¥ú…¥…™…¥·¥õ·¥á Ä Ä·¥ú·¥ò·¥õ·¥á·¥Ö ·¥Ä·¥Ñ·¥Ñ·¥áss ·¥õ·¥è ·¥Ä ü ü ·¥ò Ä·¥á·¥ç…™·¥ú·¥ç “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás! üöÄ**"
            f"\n\n>‚ôªÔ∏è **·¥Ñ ü…™·¥Ñ·¥ã  ú·¥á Ä·¥á ·¥õ·¥è  Ä·¥á…¥·¥á·¥°: /{command.get('plans')}**>"
            f"\n\n**·¥õ ú·¥Ä…¥·¥ã  è·¥è·¥ú “ì·¥è Ä  ô·¥á…™…¥…¢ ·¥°…™·¥õ ú ·¥ús!**"
        )

        if config.default.support:
            support_channel = resolve_tg_link(config.default.support)
            text += f" **( @{support_channel} ) !**"

        await bot.send_message(
            user_id,
            text
        )
    except Exception as e:
        print(e)